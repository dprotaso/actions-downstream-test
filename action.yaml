name: 'downstream-test-go'
description: 'Test Downstream Go Modules with Upstream Go Modules.'
inputs:
  upstream-module:
    description: 'Upstream Module. For example, knative.dev/pkg'
    required: true

  downstream-module:
    description: 'Downstream Module. For example, knative.dev/sample-controller'
    required: true

runs:
  using: "composite"
  steps:

    - name: Update Downstream, Replace Upstream with Local Upstream
      shell: bash
      run: |
        pushd ./src/${{ inputs.downstream-module }}
        go mod edit -replace ${{ inputs.upstream-module }}=$GITHUB_WORKSPACE/src/${{ inputs.upstream-module }}
        go mod vendor
        popd

    # - name: Downstream Update Deps
    #   shell: bash
    #   run: |
    #     pushd ./src/${{ inputs.downstream-module }}
    #     ./hack/update-deps.sh
    #     popd

    # - name:  Downstream Update Codegen
    #   shell: bash
    #   run: |
    #     pushd ./src/${{ inputs.downstream-module }}
    #     ./hack/update-codegen.sh
    #     popd

    - name: Build
      shell: bash
      run: |
        set -x
        pushd ./src/${{ inputs.downstream-module }}
        tags="$(grep -qI  -r '// +build' . |
                grep -qv '^./vendor/' | \
                grep -qv '^./hack/' | \
                grep -qv '^./third_party' | \
                grep -qv '^./.github' | \
                cut -f3 -d' ' | \
                tr ',' '\n' | \
                sort | uniq | \
                grep -qv '^!' | \
                `# Don't pass any of the built-in GOOS tags` \
                grep -qvE '(windows|linux|darwin)' | \
                `# Skip the tools tag` \
                grep -qv 'tools' | \
                tr '\n' ' ')"
        echo "Building with tags: ${tags}"
        go test -vet=off -tags "${tags}" -exec echo ./...
        popd

    # - name: Test Downstream
    #   shell: bash
    #   run: |
    #     pushd ./src/${{ inputs.downstream-module }}
    #     go test -race ./...
    #     popd
